

# The directory where the .h to test are located.
DAGEVAL_DIR=../include
ARRAYS_DIR=../arrays
# The directory for other common utilities
UTIL_DIR=../util

# The extra include files
INCLUDES = -I $(UTIL_DIR) -I $(DAGEVAL_DIR) -I $(ARRAYS_DIR)

CC      = cilk++
CILKPP	= cilk++
CILKVIEW_FLAGS = -DHAVE_CILKVIEW -lcilkutil
CFLAGS  = -Wall -g -O2 # -DTRACK_THREAD_CPU_IDS
LIBARG  = $(CILKVIEW_FLAGS) -lmiser 
TARGET  = sw_compute
SRC	= $(addsuffix .cilk,$(TARGET))

TARGETS = sw_compute swblock_16
H_FILES = SWDagNode.h SWDagParams.h matrix_utils.h sw_computeEF.h	\
sw_matrix_kernels.h sw_test_types.h sw_visual.h
O_FILES = image.o sw_visual.o

# Output files generated when we are collecting statistics.  Some are
# generated by Cilkview, others are generated if we choose to generate
# an output image.
STAT_OUTPUTS = *.ppm *.csv *.plt *.out
IMAGE_OUTPUTS = runimg_*  runparam*.dat


default: $(TARGETS)

all: $(TARGET) block_targets 

BLOCK_TARGETS=swblock_1 swblock_2 swblock_4 swblock_8 swblock_16	\
swblock_32 swblock_64 swblock_128

BLOCKCONS_TARGETS=swblockCons_1 swblockCons_2 swblockCons_4 swblockCons_8	\
swblockCons_16 swblockCons_32 swblockCons_64 swblockCons_128

block_targets: $(BLOCK_TARGETS) $(BLOCKCONS_TARGETS)

## Set the block size as a compile time flag.
swblock_%: sw_compute.cilk $(H_FILES) $(O_FILES)
	$(CILKPP) $(CFLAGS) sw_compute.cilk -DBLOCK_VALUE=$* $(INCLUDES) $(O_FILES) $(LIBARG) -o $@

## Set the block size as a compile time flag, and also have constant 
## computation for E and F.
swblockCons_%: sw_compute.cilk $(H_FILES) $(O_FILES)
	$(CILKPP) $(CFLAGS) sw_compute.cilk -DBLOCK_VALUE=$* -DCOMPUTE_CONSTANT_EF $(INCLUDES) $(O_FILES) $(LIBARG) -o $@


$(TARGET): $(SRC) $(H_FILES) $(O_FILES)
	$(CILKPP) $(CFLAGS) $(SRC) $(INCLUDES) $(O_FILES) $(LIBARG) -o $@

sw_visual.o: sw_visual.cilk $(H_FILES) 
	$(CILKPP) $(CFLAGS) -c sw_visual.cilk $(INCLUDES) -o $@

clean:
	rm -rf $(TARGET) $(TARGETS) $(O_FILES) $(BLOCK_TARGETS) $(BLOCKCONS_TARGETS) $(STAT_OUTPUTS) $(IMAGE_OUTPUTS) *.mpg
